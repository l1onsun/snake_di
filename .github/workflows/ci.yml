name: ci
on: [ push ]
jobs:
  build-qa-image:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            l1onsun/snake_di_qa:${{ github.sha }}
            l1onsun/snake_di_qa:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  pre-commit-check:
    needs: build-qa-image
    runs-on: ubuntu-latest
    container: l1onsun/snake_di_qa:${{ github.sha }}
    defaults:
      run:
        shell: bash
        working-directory: /snake_di_qa
    steps:
      - name: Run pre-commit
        run: PRE_COMMIT_HOME=/root/.cache/pre-commit pre-commit run -a

  test-and-coverage:
    needs: build-qa-image
    runs-on: ubuntu-latest
    container: l1onsun/snake_di_qa:${{ github.sha }}
    defaults:
      run:
        shell: bash
        working-directory: /snake_di_qa
    steps:
      - name: Coverage Test
        run: invoke coverage-test

      - name: Coverage Report
        run: invoke coverage-report

  test-different-python-versions:
    needs: build-qa-image
    runs-on: ubuntu-latest
    container: l1onsun/snake_di_qa:${{ github.sha }}
    defaults:
      run:
        shell: bash
        working-directory: /snake_di_qa
    steps:
      - name: Nox Test
        run: nox

  check-version-bump:
    needs: build-qa-image
    runs-on: ubuntu-latest
    container: l1onsun/snake_di_qa:${{ github.sha }}
    defaults:
      run:
        shell: bash
        working-directory: /snake_di_qa
    steps:
      - name: Check version
        run: invoke pypi-check

  publish-new-version:
    if: github.ref == 'refs/heads/master'
    needs: build-qa-image
    runs-on: ubuntu-latest
    container: l1onsun/snake_di_qa:${{ github.sha }}
    defaults:
      run:
        shell: bash
        working-directory: /snake_di_qa
    steps:
      - name: Remove git
        run: rm -r .git
      - name: Publish version
        run: flit publish
        env:
          FLIT_USERNAME: ${{ secrets.PYPI_USERNAME }}
          FLIT_PASSWORD: ${{ secrets.PYPI_PASSWORD }}